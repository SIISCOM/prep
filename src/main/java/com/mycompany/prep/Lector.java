/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.prep;

import com.mycompany.prep.BD.conexion;
import de.milchreis.uibooster.UiBooster;
import de.milchreis.uibooster.model.UiBoosterOptions;
import java.awt.Image;
import java.sql.Date;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Locale;
import javax.swing.ImageIcon;
import javax.swing.JLabel;

import javax.swing.JOptionPane;

/**
 *
 * @author Jafet
 */
public class Lector extends javax.swing.JFrame {
    int xMouse, yMouse;
    /**
     * Creates new form ASISTEENCIA
     */
    public static final Locale LOCALE_MX = new Locale("es", "MX");
    
  public  UiBooster booster = new UiBooster((UiBoosterOptions.Theme.SWING));
    public Lector() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        mainPanel = new javax.swing.JPanel();
        codePanel = new javax.swing.JPanel();
        codeLabel = new javax.swing.JLabel();
        folio = new javax.swing.JTextField();
        labelicono = new javax.swing.JLabel();
        dataaltaButton = new javax.swing.JLabel();
        dataPanel = new javax.swing.JPanel();
        dataNombre = new javax.swing.JLabel();
        dataDireccion = new javax.swing.JLabel();
        dataTelefono = new javax.swing.JLabel();
        dataPromotor = new javax.swing.JLabel();
        dataTitle = new javax.swing.JLabel();
        dataListaButton = new javax.swing.JLabel();
        headerPanel = new javax.swing.JPanel();
        closeAction = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setLocationByPlatform(true);
        setUndecorated(true);
        setResizable(false);

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        codePanel.setBackground(new java.awt.Color(0, 188, 242));
        codePanel.setMinimumSize(new java.awt.Dimension(0, 0));
        codePanel.setPreferredSize(new java.awt.Dimension(483, 272));

        codeLabel.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        codeLabel.setText("Código");

        folio.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        folio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                folioActionPerformed(evt);
            }
        });
        folio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                folioKeyPressed(evt);
            }
        });

        dataaltaButton.setBackground(new java.awt.Color(255, 255, 255));
        dataaltaButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        dataaltaButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dataaltaButton.setText("Alta Sin Código");
        dataaltaButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), null, null));
        dataaltaButton.setOpaque(true);
        dataaltaButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataaltaButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout codePanelLayout = new javax.swing.GroupLayout(codePanel);
        codePanel.setLayout(codePanelLayout);
        codePanelLayout.setHorizontalGroup(
            codePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, codePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelicono, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
            .addGroup(codePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(codePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(folio, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                    .addComponent(codeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dataaltaButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        codePanelLayout.setVerticalGroup(
            codePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(codePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(codeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(folio, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(dataaltaButton, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addGap(28, 28, 28)
                .addComponent(labelicono, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        dataPanel.setBackground(new java.awt.Color(255, 255, 255));

        dataNombre.setPreferredSize(new java.awt.Dimension(30, 16));

        dataTitle.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        dataTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dataTitle.setText("INFORMACIÓN DEL INVITADO");

        dataListaButton.setBackground(new java.awt.Color(255, 255, 255));
        dataListaButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        dataListaButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dataListaButton.setText("Lista De Asistencia");
        dataListaButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), null, null));

        javax.swing.GroupLayout dataPanelLayout = new javax.swing.GroupLayout(dataPanel);
        dataPanel.setLayout(dataPanelLayout);
        dataPanelLayout.setHorizontalGroup(
            dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dataListaButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dataNombre, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dataDireccion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dataTelefono, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dataPromotor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dataTitle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE))
                .addContainerGap())
        );
        dataPanelLayout.setVerticalGroup(
            dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dataTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(dataNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dataDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dataTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dataPromotor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dataListaButton, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addContainerGap())
        );

        headerPanel.setBackground(new java.awt.Color(255, 255, 255));
        headerPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                headerPanelMouseDragged(evt);
            }
        });
        headerPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                headerPanelMousePressed(evt);
            }
        });

        closeAction.setBackground(new java.awt.Color(204, 0, 0));
        closeAction.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        closeAction.setForeground(new java.awt.Color(255, 255, 255));
        closeAction.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        closeAction.setText("X");
        closeAction.setOpaque(true);
        closeAction.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeActionMouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Programa De Asistencia");

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerPanelLayout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeAction, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(closeAction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(codePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dataPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(codePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                    .addComponent(dataPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void folioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_folioKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_folioKeyPressed

    private void folioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_folioActionPerformed
      
//        UiBooster booster = new UiBooster((UiBoosterOptions.Theme.SWING));
        conexion conn = new conexion();
   try  {
       String usuario = folio.getText().replace("'","-");
       folio.setText(usuario);
    
       conn.ConectarBasedeDatos();
       String sql = "select * from invitados where folio='"+usuario+"' ";
       
         java.sql.Statement sentencias=conn.getConnection().createStatement();
            ResultSet resultado=sentencias.executeQuery(sql);
            
       if (resultado.next()) {
           int res = registroasistencia(usuario);        
           if (res==1) {
                 // Se encontro el codigo de barras
           dataNombre.setText(resultado.getString("nombre"));
           dataDireccion.setText(resultado.getString("direccion"));
           dataTelefono.setText(resultado.getString("telefono"));
           dataPromotor.setText(resultado.getString("promotor"));
   
//           // Import ImageIcon     
//           ImageIcon iconLogo = new ImageIcon("src/main/java/resources/fec.png");
//           // In init() method write this code
//           labelicono.setIcon(iconLogo);
          ImageIcon imageIcon = new ImageIcon(new ImageIcon("src/main/java/resources/fec.png").getImage().getScaledInstance(labelicono.getWidth(), labelicono.getHeight(), Image.SCALE_DEFAULT));
          labelicono.setIcon(imageIcon);
//JOptionPane.showMessageDialog(null, "Bienvenido: "+resultado.getString("nombre")+ " Asistencia Confirmada"  ,
//                "Confirmado", JOptionPane.INFORMATION_MESSAGE);
           conn.DesconectarBasedeDatos();
           folio.setText("");
           
           }else{
               
                 booster.showErrorDialog("Su asistencia ya se encuentra registrada", "ERROR");
                 folio.setText("");
                  dataNombre.setText("");
                  dataDireccion.setText("");
                  dataTelefono.setText("");
                  dataPromotor.setText("");
           }
                    
         
       } else{ //si no se encuentra te abre el formulario
           
       formulario();
 
       }
        } catch(SQLException ex){
            conn.DesconectarBasedeDatos();
            booster.showErrorDialog("Error message: "+ex.toString(), "ERROR");
        }
   
    }//GEN-LAST:event_folioActionPerformed
  public static String dateFormatter(String inputFormat, String outputFormat, String inputDate){
      //Define formato default de entrada.   
      String input = inputFormat.isEmpty()? "yyyy-MM-dd hh:mm:ss" : inputFormat; 
//            String input =  inputFormat; 

      //Define formato default de salida.
      String output = outputFormat.isEmpty()? "d 'de' MMMM 'del' yyyy" : outputFormat;
    String outputDate = inputDate;
    try {
        outputDate = new SimpleDateFormat(output, LOCALE_MX).format(new SimpleDateFormat(input, LOCALE_MX).parse(inputDate));
    } catch (Exception e) {
        System.out.println("dateFormatter(): " + e.getMessage());           
    }
    return outputDate;
}
    public int registroasistencia(String folio) throws SQLException
    {
        
         try {
       conexion conn = new conexion();
       conn.ConectarBasedeDatos();
       String sql = "select * from registro where folio='"+folio+"' ";      
       java.sql.Statement sentencias=conn.getConnection().createStatement();
       ResultSet resultado=sentencias.executeQuery(sql);
       if (resultado.next()) {
                    return 0;
       }
       else
       {
       DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd hh:mm:ss");
       dateFormatter("yyyy-MM-dd hh:mm:ss","d 'de' MMMM 'del' yyyy",dtf.format(LocalDateTime.now()));
       sql = "INSERT INTO registro(folio,fecha) " + "VALUES ('"+folio.trim()+"','" + (dateFormatter("yyyy-MM-dd hh:mm:ss","d 'de' MMMM 'del' yyyy",dtf.format(LocalDateTime.now())))+"')";
           System.out.println(sql);
       sentencias=conn.getConnection().createStatement();
       int conf=sentencias.executeUpdate(sql);
       return conf;

       }
         } catch (SQLException ex) {
             booster.showErrorDialog("Error message: "+ex.toString(), "ERROR");
          return 0;      
    }
       
       
        
    }
    
     public void formulario() throws SQLException
    {
    
//     UiBooster booster = new UiBooster((UiBoosterOptions.Theme.SWING));
     conexion conn = new conexion();
     de.milchreis.uibooster.model.Form form = booster.createForm("Informacion Invitado")
            .addText("Nombre").setID("1")
            .addText("Direccion").setID("2")
            .addText("Telefono").setID("3")
            .show(); 
    
           if ((form.getById("1").asString().length()> 0) && (form.getById("2").asString().length()> 0 )&& (form.getById("3").asString().length()> 0)){                  
                conn.ConectarBasedeDatos();
                String sql = "INSERT INTO invitados(folio,nombre,direccion,telefono) " + "VALUES ('"+folio.getText().trim()+"','"+form.getById("1").asString().toUpperCase().trim()+"', '"+form.getById("2").asString().toUpperCase().trim()+"', '"+form.getById("3").asString().toUpperCase().trim()+"')";
                java.sql.Statement  sentencias=conn.getConnection().createStatement();
                int conf=sentencias.executeUpdate(sql);
                
                
                    if (conf==1) {
                        int res=  registroasistencia(folio.getText());
                        if (res==1) {
                         booster.showInfoDialog("Registrado con exito");
                        conn.DesconectarBasedeDatos();
                        folio.setText("");
                        }
                       
                       }
                    else{
                        booster.showErrorDialog("Error message: No se realizo la insercion en SQL ", "ERROR");folio.setText("");
                        conn.DesconectarBasedeDatos();
                  folio.setText("");
                  dataNombre.setText("");
                  dataDireccion.setText("");
                  dataTelefono.setText("");
                  dataPromotor.setText("");
                        
                        }
           }
           else{
               conn.DesconectarBasedeDatos();
                final boolean isConfirmed = booster.showConfirmDialog("¿Todos los campos deben estar llenos, desea continuar con el formulario?", "ERROR");
               if (isConfirmed) {
                   formulario();
               } else {
                   folio.setText("");
                  dataNombre.setText("");
                  dataDireccion.setText("");
                  dataTelefono.setText("");
                  dataPromotor.setText("");
                      }
                
           }
    }
    private void headerPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerPanelMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_headerPanelMousePressed

    private void headerPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerPanelMouseDragged
        int x = evt.getXOnScreen()-2;
        int y = evt.getYOnScreen()-2;
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_headerPanelMouseDragged

    private void closeActionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeActionMouseClicked
        System.exit(0);
    }//GEN-LAST:event_closeActionMouseClicked

    private void dataaltaButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataaltaButtonMouseClicked
        
    }//GEN-LAST:event_dataaltaButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Lector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Lector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Lector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Lector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Lector().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel closeAction;
    private javax.swing.JLabel codeLabel;
    private javax.swing.JPanel codePanel;
    private javax.swing.JLabel dataDireccion;
    private javax.swing.JLabel dataListaButton;
    private javax.swing.JLabel dataNombre;
    private javax.swing.JPanel dataPanel;
    private javax.swing.JLabel dataPromotor;
    private javax.swing.JLabel dataTelefono;
    private javax.swing.JLabel dataTitle;
    private javax.swing.JLabel dataaltaButton;
    private javax.swing.JTextField folio;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel labelicono;
    private javax.swing.JPanel mainPanel;
    // End of variables declaration//GEN-END:variables
}
